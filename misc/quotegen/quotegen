#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"Generate an image with an antique-looking quote."

import argparse
import logging
import sys
from PIL import Image, ImageDraw, ImageFont, PngImagePlugin


CHARS_PER_LINE = 30


def quote2lines(single_line):
    "Split the quote into appropriately sized lines."

    words = single_line.split()
    lines = []
    cur_line = ""

    for word in words:
        if len(cur_line + " " + word) > CHARS_PER_LINE:
            lines.append(cur_line)
            cur_line = word
        elif cur_line != "":
            cur_line += " " + word
        else:
            cur_line = word

    if cur_line != "":
        lines.append(cur_line)

    return lines


# See http://blog.client9.com/2007/08/28/python-pil-and-png-metadata-take-2.html


def pngsave(image, file):
    "Save PNG image preserving metadata."

    reserved = ("interlace", "gamma", "dpi", "transparency", "aspect")

    meta = PngImagePlugin.PngInfo()

    # copy metadata into new object
    for key, value in image.info.items():
        if key in reserved:
            continue

        meta.add_text(key, value, 0)

    image.save(file, "PNG", pnginfo=meta)


# handle inputs

DESCRIPTION = """
Generate an image with a quote and a portrait. Perfect for fake quotes
attributed to famous people.

Several famous people come out of the box (selected by -p/--preset option):

- 'bismarck'       (Otto von Bismarck - this is also the default)
- 'churchill'      (Sir Winston Churchill)
- 'dulles'         (Allen Dulles)
- 'obama'          (Barack Obama)
- 'thatcher'       (Margareth Thatcher)
"""

parser = argparse.ArgumentParser(
    description=DESCRIPTION, formatter_class=argparse.RawTextHelpFormatter
)
parser.add_argument("-p", "--preset", type=str, help="Preset to use")
parser.add_argument(
    "-i", "--image", metavar="FILE", dest="portrait", help="File with author's image"
)
parser.add_argument("-s", "--signature", dest="signature", help="Author's signature")
parser.add_argument(
    "-o",
    "--output",
    metavar="FILE",
    dest="output_file",
    default="quote.png",
    help="Output file",
)
# parser.add_argument('quote', nargs='*')
parser.add_argument("quote", help="Actual quote to use")
args = parser.parse_args()

PORTRAIT_FILE = SIGNATURE = None

if args.portrait:
    PORTRAIT_FILE = args.portrait

if args.signature:
    SIGNATURE = args.signature

if args.preset == "dulles":
    PORTRAIT_FILE = "assets/dulles.jpg"
    SIGNATURE = "Аллен Даллес"

elif args.preset == "churchill":
    PORTRAIT_FILE = "assets/churchill.jpg"
    SIGNATURE = "Уинстон Черчилль"

elif args.preset == "obama":
    PORTRAIT_FILE = "assets/obama.jpg"
    SIGNATURE = "Барак Обама"

elif args.preset == "thatcher":
    PORTRAIT_FILE = "assets/thatcher.jpg"
    SIGNATURE = "Маргарет Тэтчер"

elif not args.preset or args.preset == "bismarck":
    if not PORTRAIT_FILE:
        PORTRAIT_FILE = "assets/bismarck.jpg"

    if not SIGNATURE:
        SIGNATURE = "Отто фон Бисмарк"

else:
    logging.fatal("No such preset")
    sys.exit(1)


# generate basic image

img = Image.new("RGB", (600, 400))
draw = ImageDraw.Draw(img)
draw.rectangle([(10, 10), (img.size[0] - 10, img.size[1] - 12)], outline="#BBBBBB")

picture = Image.open(PORTRAIT_FILE, "r")
TARGET_WIDTH = 200
target_height = int((float(TARGET_WIDTH) / picture.size[0]) * picture.size[1])
picture = picture.resize((TARGET_WIDTH, target_height))
xpos = img.size[0] - TARGET_WIDTH - 30
ypos = int((img.size[1] - target_height) / 2)
img.paste(picture, (xpos, ypos))

font = ImageFont.truetype("assets/B52.ttf", 20)
font_sig = ImageFont.truetype("assets/B52.ttf", 16)
font_url = ImageFont.truetype("assets/FreeMono.ttf", 10)
quote_lines = quote2lines(args.quote)


# calculate vertical position of the block of text

Y_DELTA = 5  # extra spacing between lines
EXTRA_SIG_OFFSET = 30
BLOCK_HEIGHT = 0

for ii, line in enumerate(quote_lines):
    BLOCK_HEIGHT += draw.textbbox(xy=[0, 0], text=line, font=font)[-1] + Y_DELTA

BLOCK_HEIGHT += (
    draw.textbbox(xy=[0, 0], text=SIGNATURE, font=font_sig)[-1] + EXTRA_SIG_OFFSET
)

if BLOCK_HEIGHT > 340:
    logging.fatal("text is too large to fit on image")
    sys.exit(1)

y_offset = int((400 - BLOCK_HEIGHT) / 2)
X_OFFSET = 25


# render the quote

for ii, line in enumerate(quote_lines):
    if ii == 0:
        line = "«" + line

    if ii == len(quote_lines) - 1:
        line += "»"

    draw.text((X_OFFSET, y_offset), line, font=font)
    y_offset += draw.textbbox(xy=(0, 0), text=line, font=font)[-1] + Y_DELTA

X_OFFSET += 120
y_offset += EXTRA_SIG_OFFSET
draw.text((X_OFFSET, y_offset), "-- " + SIGNATURE, font=font_sig)
draw.text((600 - 85, 400 - 12), "goo.gl/wr9bgX", fill="#03F4FC", font=font_url)
del draw


# save image with metadata

PROJECT_URL = "https://github.com/abelikoff/shell-tools/tree/master/misc/quotegen"
img.info = {
    "Author": "Alexander L. Belikoff",
    "Source": PROJECT_URL,
    "Comment": PROJECT_URL,
}

# img.save(args.output_file)
pngsave(img, args.output_file)
